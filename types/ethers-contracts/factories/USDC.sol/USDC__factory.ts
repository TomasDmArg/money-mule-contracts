/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../../common.js"
  import type { USDC, USDCInterface } from "../../USDC.sol/USDC.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "initialOwner",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "spender",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "allowance",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "needed",
        "type": "uint256"
      }
    ],
    "name": "ERC20InsufficientAllowance",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "sender",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "balance",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "needed",
        "type": "uint256"
      }
    ],
    "name": "ERC20InsufficientBalance",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "approver",
        "type": "address"
      }
    ],
    "name": "ERC20InvalidApprover",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "receiver",
        "type": "address"
      }
    ],
    "name": "ERC20InvalidReceiver",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "sender",
        "type": "address"
      }
    ],
    "name": "ERC20InvalidSender",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "spender",
        "type": "address"
      }
    ],
    "name": "ERC20InvalidSpender",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      }
    ],
    "name": "OwnableInvalidOwner",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "OwnableUnauthorizedAccount",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "owner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "spender",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "Approval",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "previousOwner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "OwnershipTransferred",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "from",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "Transfer",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "spender",
        "type": "address"
      }
    ],
    "name": "allowance",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "spender",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "approve",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "balanceOf",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "burn",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "burnFrom",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "decimals",
    "outputs": [
      {
        "internalType": "uint8",
        "name": "",
        "type": "uint8"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "mint",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address[]",
        "name": "recipients",
        "type": "address[]"
      },
      {
        "internalType": "uint256[]",
        "name": "amounts",
        "type": "uint256[]"
      }
    ],
    "name": "mintBatch",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "name",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "renounceOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "symbol",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "totalSupply",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "transfer",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "from",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "transferFrom",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "transferOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
] as const;

  const _bytecode = "0x60806040523461038a57610e116020813803918261001c8161038e565b93849283398101031261038a57516001600160a01b0381169081900361038a57610046604061038e565b9060088252672aa9a21021b7b4b760c11b6020830152610066604061038e565b60048152635553444360e01b602082015282519091906001600160401b03811161029b57600354600181811c91168015610380575b602082101461027d57601f811161031d575b506020601f82116001146102ba57819293945f926102af575b50508160011b915f199060031b1c1916176003555b81516001600160401b03811161029b57600454600181811c91168015610291575b602082101461027d57601f811161021a575b50602092601f82116001146101b957928192935f926101ae575b50508160011b915f199060031b1c1916176004555b801561019b5760055460405191806001600160a01b0383167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a36001600160a81b031990911617600360a11b17600555610a5d90816103b48239f35b631e4fbdf760e01b5f525f60045260245ffd5b015190505f80610128565b601f1982169360045f52805f20915f5b86811061020257508360019596106101ea575b505050811b0160045561013d565b01515f1960f88460031b161c191690555f80806101dc565b919260206001819286850151815501940192016101c9565b60045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c81019160208410610273575b601f0160051c01905b818110610268575061010e565b5f815560010161025b565b9091508190610252565b634e487b7160e01b5f52602260045260245ffd5b90607f16906100fc565b634e487b7160e01b5f52604160045260245ffd5b015190505f806100c6565b601f1982169060035f52805f20915f5b818110610305575095836001959697106102ed575b505050811b016003556100db565b01515f1960f88460031b161c191690555f80806102df565b9192602060018192868b0151815501940192016102ca565b60035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c81019160208410610376575b601f0160051c01905b81811061036b57506100ad565b5f815560010161035e565b9091508190610355565b90607f169061009b565b5f80fd5b6040519190601f01601f191682016001600160401b0381118382101761029b5760405256fe6080806040526004361015610012575f80fd5b5f3560e01c90816306fdde031461062e57508063095ea7b31461058657806318160ddd1461056957806323b872dd14610531578063313ce5671461050e57806340c10f19146104e157806342966c68146104c457806370a082311461048d578063715018a61461043257806379cc6790146104005780637c88e3d91461031a5780638da5cb5b146102f257806395d89b41146101d7578063a9059cbb146101a6578063dd62ed3e146101565763f2fde38b146100cc575f80fd5b34610152576020366003190112610152576100e5610727565b6100ed610908565b6001600160a01b0316801561013f57600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b346101525760403660031901126101525761016f610727565b61017761073d565b6001600160a01b039182165f908152600160209081526040808320949093168252928352819020549051908152f35b34610152576040366003190112610152576101cc6101c2610727565b602435903361084b565b602060405160018152f35b34610152575f366003190112610152576040515f6004548060011c906001811680156102e8575b6020831081146102d4578285529081156102b85750600114610263575b50819003601f01601f191681019067ffffffffffffffff82118183101761024f5761024b829182604052826106fd565b0390f35b634e487b7160e01b5f52604160045260245ffd5b905060045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5f905b8282106102a25750602091508201018261021b565b600181602092548385880101520191019061028d565b90506020925060ff191682840152151560051b8201018261021b565b634e487b7160e01b5f52602260045260245ffd5b91607f16916101fe565b34610152575f366003190112610152576005546040516001600160a01b039091168152602090f35b346101525760403660031901126101525760043567ffffffffffffffff81116101525761034b903690600401610753565b9060243567ffffffffffffffff81116101525761036c903690600401610753565b92610375610908565b8381036103c2575f5b81811061038757005b610392818386610784565b35906001600160a01b0382168203610152576103bc6001926103b5838988610784565b359061092f565b0161037e565b60405162461bcd60e51b8152602060048201526016602482015275082e4e4c2f2e640d8cadccee8d040dad2e6dac2e8c6d60531b6044820152606490fd5b346101525760403660031901126101525761043061041c610727565b6024359061042b8233836107a8565b6109a3565b005b34610152575f3660031901126101525761044a610908565b600580546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610152576020366003190112610152576001600160a01b036104ae610727565b165f525f602052602060405f2054604051908152f35b3461015257602036600319011261015257610430600435336109a3565b34610152576040366003190112610152576104306104fd610727565b610505610908565b6024359061092f565b34610152575f36600319011261015257602060ff60055460a01c16604051908152f35b34610152576060366003190112610152576101cc61054d610727565b61055561073d565b604435916105648333836107a8565b61084b565b34610152575f366003190112610152576020600254604051908152f35b346101525760403660031901126101525761059f610727565b60243590331561061b576001600160a01b031690811561060857335f52600160205260405f20825f526020528060405f20556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b634a1406b160e11b5f525f60045260245ffd5b63e602df0560e01b5f525f60045260245ffd5b34610152575f366003190112610152575f6003548060011c906001811680156106f3575b6020831081146102d4578285529081156102b8575060011461069e5750819003601f01601f191681019067ffffffffffffffff82118183101761024f5761024b829182604052826106fd565b905060035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5f905b8282106106dd5750602091508201018261021b565b60018160209254838588010152019101906106c8565b91607f1691610652565b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361015257565b602435906001600160a01b038216820361015257565b9181601f840112156101525782359167ffffffffffffffff8311610152576020808501948460051b01011161015257565b91908110156107945760051b0190565b634e487b7160e01b5f52603260045260245ffd5b6001600160a01b039081165f818152600160209081526040808320948616835293905291909120549291905f1984106107e2575b50505050565b82841061082857801561061b576001600160a01b03821615610608575f52600160205260405f209060018060a01b03165f5260205260405f20910390555f8080806107dc565b508290637dc7a0d960e11b5f5260018060a01b031660045260245260445260645ffd5b6001600160a01b03169081156108f5576001600160a01b03169182156108e257815f525f60205260405f20548181106108c957817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f525f825260405f20818154019055604051908152a3565b8263391434e360e21b5f5260045260245260445260645ffd5b63ec442f0560e01b5f525f60045260245ffd5b634b637e8f60e11b5f525f60045260245ffd5b6005546001600160a01b0316330361091c57565b63118cdaa760e01b5f523360045260245ffd5b6001600160a01b03169081156108e2576002549080820180921161098f5760207fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef915f9360025584845283825260408420818154019055604051908152a3565b634e487b7160e01b5f52601160045260245ffd5b9091906001600160a01b031680156108f557805f525f60205260405f2054838110610a0d576020845f94957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef938587528684520360408620558060025403600255604051908152a3565b915063391434e360e21b5f5260045260245260445260645ffdfea2646970667358221220055a45262ee477fccf1d26e94be7fbaaeb0e4c64804489d24e25a0e56415913b64736f6c634300081c0033";

  
      type USDCConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: USDCConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class USDC__factory extends ContractFactory {
    
      constructor(...args: USDCConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(initialOwner: AddressLike, overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(initialOwner, overrides || {});
    };
    override deploy(initialOwner: AddressLike, overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(initialOwner, overrides || {}) as Promise<USDC & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): USDC__factory {
      return super.connect(runner) as USDC__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): USDCInterface {
      return new Interface(_abi) as USDCInterface;
    }
    
    override attach(address: string | Addressable): USDC {
      return super.attach(address) as USDC;
    }
  static connect(address: string, runner?: ContractRunner | null): USDC {
      return new Contract(address, _abi, runner) as unknown as USDC;
    }
  }

  
  